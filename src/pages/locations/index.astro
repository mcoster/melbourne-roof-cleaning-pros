---
import { buildLocationPages, groupLocationsAlphabetically } from '@mcoster/astro-local-package/utils/location-builder';
import { getCachedFooterLocations } from '@mcoster/astro-local-package/utils/footer-locations';
import Layout from '@/layouts/Layout.astro';
import Header from '@mcoster/astro-local-package/components/Header.astro';
import Footer from '@mcoster/astro-local-package/components/Footer.astro';
import HeroWithForm from '@mcoster/astro-local-package/components/HeroWithForm.astro';
import CTABanner from '@mcoster/astro-local-package/components/CTABanner.astro';
import { siteConfig } from '@/config/site';
import { getEntry } from 'astro:content';

// Get all location pages at build time
const locationPages = await buildLocationPages();
// Use the same footer locations logic for featured locations
const featuredLocations = await getCachedFooterLocations();
// Add the main location to featured
const allFeaturedLocations = [
  {
    suburb: { name: siteConfig.mainLocation, state: siteConfig.address.state, postcode: siteConfig.address.postcode },
    url: '/'
  },
  ...featuredLocations
];
const locationsAlphabetical = groupLocationsAlphabetically(locationPages);

// Get locations configuration to use the same hero image
const locationsData = await getEntry('locationSections', 'locations');
const locationsHeroSection = locationsData.data.sections.find(
  section => section.component === 'HeroWithForm' && section.enabled !== false
);
const heroBackgroundImage = locationsHeroSection?.props?.backgroundImage || '/images/hero-bg.jpg';

// SEO metadata
const seoTitle = `Service Areas | ${siteConfig.businessName}`;
const seoDescription = `We provide professional services across ${locationPages.length} suburbs in ${siteConfig.address.state}. Find our service availability in your area.`;

// Service Area schema
const serviceAreaSchema = {
  "@context": "https://schema.org",
  "@type": "Service",
  "name": siteConfig.businessName,
  "provider": {
    "@type": "LocalBusiness",
    "name": siteConfig.businessName,
    "telephone": siteConfig.phone,
    "email": siteConfig.email
  },
  "areaServed": locationPages.map(loc => ({
    "@type": "City",
    "name": loc.suburb.name,
    "containedInPlace": {
      "@type": "State",
      "name": loc.suburb.state
    }
  })),
  "serviceArea": {
    "@type": "GeoCircle",
    "geoMidpoint": {
      "@type": "GeoCoordinates",
      "latitude": siteConfig.address.coordinates?.lat || -34.9285,
      "longitude": siteConfig.address.coordinates?.lng || 138.6007
    },
    "geoRadius": `${siteConfig.seo?.location_based?.radius_km || 22}000`
  }
};
---

<Layout 
  title={seoTitle}
  description={seoDescription}
  noindex={true}
>
  <!-- Schema Markup -->
  <script type="application/ld+json" set:html={JSON.stringify(serviceAreaSchema)} />
  
  <Header />
  
  <main>
    <!-- Hero Section -->
    <HeroWithForm
      title="Our Service Areas"
      subtitle={`Proudly serving ${locationPages.length} suburbs across ${siteConfig.address.state}`}
      backgroundImage={heroBackgroundImage}
      formTitle="Get a FREE Quote"
      formDescription=""
    />
    
    <!-- Featured Locations -->
    <section class="py-16 bg-white">
      <div class="container mx-auto px-4">
        <h2 class="text-3xl font-bold mb-2 text-center">Popular Service Areas</h2>
        <p class="text-gray-600 text-center mb-8">Our most frequently serviced suburbs</p>
        
        <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4 max-w-6xl mx-auto">
          {allFeaturedLocations.map((location) => (
            <a 
              href={location.url}
              class="group bg-white border border-gray-200 rounded-lg p-4 hover:shadow-lg hover:border-primary transition-all duration-200"
            >
              <h3 class="font-semibold text-lg group-hover:text-primary transition-colors">
                {location.suburb.name}
              </h3>
              <div class="text-sm text-gray-600 mt-1">
                <span>{location.suburb.state}</span>
                {location.suburb.postcode && (
                  <span class="ml-2">{location.suburb.postcode}</span>
                )}
              </div>
            </a>
          ))}
        </div>
      </div>
    </section>
    
    <!-- Alphabetical Directory -->
    <section class="py-16 bg-white">
      <div class="container mx-auto px-4">
        <h2 class="text-3xl font-bold mb-2 text-center">All Service Areas A-Z</h2>
        <p class="text-gray-600 text-center mb-8">Complete directory of suburbs we service</p>
        
        <div class="max-w-6xl mx-auto">
          <!-- Quick Jump Links -->
          <div class="flex flex-wrap justify-center gap-2 mb-8 pb-8 border-b">
            {Object.keys(locationsAlphabetical).sort().map((letter) => (
              <a 
                href={`#letter-${letter}`}
                class="inline-block px-3 py-1 bg-gray-100 hover:bg-primary hover:text-white rounded transition-colors duration-200"
              >
                {letter}
              </a>
            ))}
          </div>
          
          <!-- Alphabetical Groups -->
          {Object.entries(locationsAlphabetical).sort(([a], [b]) => a.localeCompare(b)).map(([letter, locations]) => (
            <div id={`letter-${letter}`} class="mb-8">
              <h3 class="text-2xl font-bold mb-4 text-primary">{letter}</h3>
              <div class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-3">
                {locations.map((location) => (
                  <a 
                    href={location.url}
                    class="text-gray-700 hover:text-primary transition-colors duration-200"
                  >
                    {location.suburb.name}
                  </a>
                ))}
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>
    
    <!-- CTA Section -->
    <CTABanner
      heading="Can't Find Your Suburb?"
      description="We're constantly expanding our service areas. Contact us to check if we service your location."
      buttonText="Check Service Availability"
      buttonHref="#quote-form"
      secondaryButtonText={`Call ${siteConfig.phone}`}
      secondaryButtonHref={`tel:${siteConfig.phone}`}
      variant="gradient"
    />
  </main>
  
  <Footer />
</Layout>